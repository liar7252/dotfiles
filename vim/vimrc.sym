"
" general  
"
set encoding=utf-8		  " encoding charset
set nocompatible		  " Use Vim settings instead of Vi settings
filetype plugin on 
set history=50
set laststatus=2		  " always show the status line
set noeb vb t_vb=                 " disable error bell

"
" text formatting
"
set autoindent			  " automatic indent new lines
set smartindent			  " smart auto indent
set nowrap			  " do not wrap lines
set softtabstop=2		  " a tab is 2 spaces
set shiftwidth=2		  "
set expandtab			  " use spaces not tabs
set backspace=indent,eol,start	  " backspace through everything in insert mode

"
" Searching
"
set hlsearch			  " highlight matches
set incsearch			  " incremental searching
set ignorecase			  " searches are case insensitive ...
set smartcase			  " ... unless they contain at least one capital letter

"
" mapping
"
let mapleader=','		  " lead
inoremap jj <ESC>		  " exit to normal mode	
" sane movement with wrap turned on
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk
" emacs movement keybindings in insert mode
imap <C-a> <C-o>0
imap <C-e> <C-o>$
map <C-e> $
map <C-a> 0

"
" UI
"
syntax enable			  " syntax color 
set colorcolumn=80		  " 80 car. rule
set number			  " line numbers
set relativenumber		  " show distance from current line
set showmatch                     " show brackets/braces matches
set mat=5                         " show braces duration (1/10 sec)


"
" Handle swap / backup files 
"
set nobackup
set nowritebackup
set noswapfile

"
" ctrlp config
"
set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*.so,.DS_Store     	" Linux/MacOSX
set wildignore+=.git\*,.hg\*,.svn\*,*.dll,*.exe    		" Windows

""
function! StripWhitespace ()
    exec ':%s/ \+$//g'
  "exec ':%s/\s\+$//g'
endfunction
map ,s :call StripWhitespace ()<CR>

"" Bracket &co matching
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

inoremap        (  ()<Left>
inoremap <expr> )  strpart(getline('.'), col('.')-1, 1) == ")" ? "\<Right>" : ")"

